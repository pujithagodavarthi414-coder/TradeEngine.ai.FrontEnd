import { Component, OnInit } from "@angular/core";
import * as _ from "underscore";
import { LocalStorageProperties } from '../constants/localstorage-properties';
import { EntityTypeFeatureIds } from '../constants/entitytype-feature-ids';

@Component({
  template: ""
})

export class AppFeatureBaseComponent implements OnInit {
  canAccess_entityType_feature_AddOrUpdateVersion : Boolean;
  canAccess_entityType_feature_EditReplanGoalDependency : Boolean;
  canAccess_entityType_feature_PrintRunReport : Boolean;
  canAccess_entityType_feature_UpdateActiveGoal : Boolean;
  canAccess_entityType_feature_DeleteSprint : Boolean;
  canAccess_entityType_feature_EditReplanGoalAssignee : Boolean;
  canAccess_entityType_feature_DeleteTestcases : Boolean;
  canAccess_entityType_feature_CanMoveGoalToAnotherProject : Boolean;
  canAccess_entityType_feature_UpdateProject : Boolean;
  canAccess_entityType_feature_ReplanSprint : Boolean;
  canAccess_entityType_feature_AddOrUpdateRun : Boolean;
  canAccess_entityType_feature_ViewProjectMembers : Boolean;
  canAccess_entityType_feature_CanMoveSubtaskFromOneWorkItemToAnother : Boolean;
  canAccess_entityType_feature_DeleteTestReport : Boolean;
  canAccess_entityType_feature_ViewGoalActivityReports : Boolean;
  canAccess_entityType_feature_EditActiveGoalDependency : Boolean;
  canAccess_entityType_feature_GoalFeatures : Boolean;
  canAccess_entityType_feature_EditActiveGoalBugCausedUser : Boolean;
  canAccess_entityType_feature_AddOrUpdateGoal : Boolean;
  canAccess_entityType_feature_ParkGoal : Boolean;
  canAccess_entityType_feature_ViewSprints : Boolean;
  canAccess_entityType_feature_EditReplanGoalProjectFeature : Boolean;
  canAccess_entityType_feature_AddOrUpdateProjectFeature : Boolean;
  canAccess_entityType_feature_DeleteScenario : Boolean;
  canAccess_entityType_feature_CreateWorkItemLinks : Boolean;
  canAccess_entityType_feature_ViewProjectSettings : Boolean;
  canAccess_entityType_feature_DeleteVersion : Boolean;
  canAccess_entityType_feature_CanMoveWorkItemToAnotherGoal : Boolean;
  canAccess_entityType_feature_CanAccessSprintLevelReports : Boolean;
  canAccess_entityType_feature_AddOrUpdateScenarioSection : Boolean;
  canAccess_entityType_feature_EditActiveGoalProjectFeature : Boolean;
  canAccess_entityType_feature_GoalReplan : Boolean;
  canAccess_entityType_feature_DeleteScenarioSection : Boolean;
  canAccess_entityType_feature_ParkWorkItem : Boolean;
  canAccess_entityType_feature_SendReport : Boolean;
  canAccess_entityType_feature_AddOrUpdateStatus : Boolean;
  canAccess_entityType_feature_ViewProjectFeatures : Boolean;
  canAccess_entityType_feature_CopyOrMoveCases : Boolean;
  canAccess_entityType_feature_EditBacklogGoalBugCausedUser : Boolean;
  canAccess_entityType_feature_EditReplanGoalWorkItemName : Boolean;
  canAccess_entityType_feature_CanAccessGoalLevelReports : Boolean;
  canAccess_entityType_feature_AddOrUpdateTestReport : Boolean;
  canAccess_entityType_feature_EditBacklogGoalAssignee : Boolean;
  canAccess_entityType_feature_ExportRunReport : Boolean;
  canAccess_entityType_feature_AddOrUpdateWorkItem : Boolean;
  canAccess_entityType_feature_ArchiveProjectMember : Boolean;
  canAccess_entityType_feature_BulkUpdateWorkItem : Boolean;
  canAccess_entityType_feature_EditBacklogGoalWorkItemName : Boolean;
  canAccess_entityType_feature_MergeScenarios : Boolean;
  canAccess_entityType_feature_EditBacklogGoalDeadlineDate : Boolean;
  canAccess_entityType_feature_AddOrUpdateTestcases : Boolean;
  canAccess_entityType_feature_EditActiveGoalDeadlineDate : Boolean;
  canAccess_entityType_feature_WorkItemFileUpload : Boolean;
  canAccess_entityType_feature_EditReplanGoalEstimatedTime : Boolean;
  canAccess_entityType_feature_ArchiveWorkItem : Boolean;
  canAccess_entityType_feature_ExportScenarios : Boolean;
  canAccess_entityType_feature_EditActiveGoalWorkItemName : Boolean;
  canAccess_entityType_feature_EditReplanGoalBugCausedUser : Boolean;
  canAccess_entityType_feature_DeleteRun : Boolean;
  canAccess_entityType_feature_EditActiveGoalEstimatedTime : Boolean;
  canAccess_entityType_feature_EditActiveGoalBugPriority : Boolean;
  canAccess_entityType_feature_EditActiveGoalAssignee : Boolean;
  canAccess_entityType_feature_EditBacklogGoalDependency : Boolean;
  canAccess_entityType_feature_ViewGoals : Boolean;
  canAccess_entityType_feature_ViewWorkItemLinks : Boolean;
  canAccess_entityType_feature_ArchiveGoal : Boolean;
  canAccess_entityType_feature_AddOrUpdateSprint : Boolean;
  canAccess_entityType_feature_StartSprint : Boolean;
  canAccess_entityType_feature_AddOrUpdateProjectMember : Boolean;
  canAccess_entityType_feature_AddOrUpdateScenario : Boolean;
  canAccess_entityType_feature_EditBacklogGoalProjectFeature : Boolean;
  canAccess_entityType_feature_PrintScenarios : Boolean;
  canAccess_entityType_feature_UpgradeProjectAsPublicProject : Boolean;
  canAccess_entityType_feature_EditReplanGoalDeadlineDate : Boolean;
  canAccess_entityType_feature_WorkItemComments : Boolean;
  canAccess_entityType_feature_EditReplanGoalBugPriority : Boolean;
  canAccess_entityType_feature_EditBacklogGoalEstimatedTime : Boolean;
  canAccess_entityType_feature_CompleteSprint : Boolean;
  canAccess_entityType_feature_ViewWorkItem : Boolean;
  canAccess_entityType_feature_CanMoveGoalWorkitemIntoSprints : Boolean;
  canAccess_entityType_feature_ArchiveProjectFeature : Boolean;
  canAccess_entityType_feature_ApproveGoal : Boolean;
  canAccess_entityType_feature_CanMoveSprintWorkitemIntoAnotherSprint : Boolean;
  canAccess_entityType_feature_ArchiveWorkItemLink : Boolean;
  canAccess_entityType_feature_ViewTemplates : Boolean;
  canAccess_entityType_feature_EditBacklogGoalBugPriority : Boolean;

  constructor() {
    this.logNavigation();
  }

  ngOnInit() {
    var roles = JSON.parse(localStorage.getItem(LocalStorageProperties.EntityRoleFeatures));
    this.canAccess_entityType_feature_AddOrUpdateVersion = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateVersion.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalDependency = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalDependency.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_PrintRunReport = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_PrintRunReport.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_UpdateActiveGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_UpdateActiveGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalAssignee = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalAssignee.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteTestcases = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteTestcases.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanMoveGoalToAnotherProject = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanMoveGoalToAnotherProject.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_UpdateProject = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_UpdateProject.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ReplanSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ReplanSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateRun = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateRun.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewProjectMembers = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewProjectMembers.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanMoveSubtaskFromOneWorkItemToAnother = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanMoveSubtaskFromOneWorkItemToAnother.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteTestReport = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteTestReport.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewGoalActivityReports = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewGoalActivityReports.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalDependency = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalDependency.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_GoalFeatures = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_GoalFeatures.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalBugCausedUser = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalBugCausedUser.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ParkGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ParkGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewSprints = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewSprints.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalProjectFeature = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalProjectFeature.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateProjectFeature = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateProjectFeature.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteScenario = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteScenario.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CreateWorkItemLinks = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CreateWorkItemLinks.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewProjectSettings = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewProjectSettings.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteVersion = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteVersion.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanMoveWorkItemToAnotherGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanMoveWorkItemToAnotherGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanAccessSprintLevelReports = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanAccessSprintLevelReports.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateScenarioSection = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateScenarioSection.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalProjectFeature = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalProjectFeature.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_GoalReplan = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_GoalReplan.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteScenarioSection = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteScenarioSection.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ParkWorkItem = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ParkWorkItem.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_SendReport = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_SendReport.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateStatus = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateStatus.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewProjectFeatures = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewProjectFeatures.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CopyOrMoveCases = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CopyOrMoveCases.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalBugCausedUser = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalBugCausedUser.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalWorkItemName = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalWorkItemName.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanAccessGoalLevelReports = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanAccessGoalLevelReports.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateTestReport = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateTestReport.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalAssignee = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalAssignee.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ExportRunReport = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ExportRunReport.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateWorkItem = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateWorkItem.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ArchiveProjectMember = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ArchiveProjectMember.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_BulkUpdateWorkItem = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_BulkUpdateWorkItem.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalWorkItemName = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalWorkItemName.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_MergeScenarios = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_MergeScenarios.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalDeadlineDate = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalDeadlineDate.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateTestcases = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateTestcases.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalDeadlineDate = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalDeadlineDate.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_WorkItemFileUpload = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_WorkItemFileUpload.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalEstimatedTime = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalEstimatedTime.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ArchiveWorkItem = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ArchiveWorkItem.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ExportScenarios = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ExportScenarios.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalWorkItemName = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalWorkItemName.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalBugCausedUser = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalBugCausedUser.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_DeleteRun = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_DeleteRun.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalEstimatedTime = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalEstimatedTime.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalBugPriority = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalBugPriority.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditActiveGoalAssignee = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditActiveGoalAssignee.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalDependency = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalDependency.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewGoals = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewGoals.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewWorkItemLinks = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewWorkItemLinks.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ArchiveGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ArchiveGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_StartSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_StartSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateProjectMember = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateProjectMember.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_AddOrUpdateScenario = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_AddOrUpdateScenario.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalProjectFeature = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalProjectFeature.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_PrintScenarios = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_PrintScenarios.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_UpgradeProjectAsPublicProject = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_UpgradeProjectAsPublicProject.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalDeadlineDate = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalDeadlineDate.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_WorkItemComments = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_WorkItemComments.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditReplanGoalBugPriority = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditReplanGoalBugPriority.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalEstimatedTime = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalEstimatedTime.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CompleteSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CompleteSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewWorkItem = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewWorkItem.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanMoveGoalWorkitemIntoSprints = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanMoveGoalWorkitemIntoSprints.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ArchiveProjectFeature = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ArchiveProjectFeature.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ApproveGoal = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ApproveGoal.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_CanMoveSprintWorkitemIntoAnotherSprint = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_CanMoveSprintWorkitemIntoAnotherSprint.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ArchiveWorkItemLink = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ArchiveWorkItemLink.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_ViewTemplates = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_ViewTemplates.toString().toLowerCase(); }) != null;
    this.canAccess_entityType_feature_EditBacklogGoalBugPriority = _.find(roles, function(role: any) { return role.entityFeatureId.toLowerCase() == EntityTypeFeatureIds.EntityTypeFeature_EditBacklogGoalBugPriority.toString().toLowerCase(); }) != null;
  }

  private logNavigation() {
    console.log("Navigated to this page.");
  }
}
